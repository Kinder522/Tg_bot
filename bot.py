from aiogram import F, Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message
from Config import BOT_TOKEN
import random

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
num = 0
wait = False
wait_to_ans = False

user = {'in_game': False,
        'secret_number': None,
        'attempts': 5,
        'total_games': 0,
        'wins': 0}


@dp.message(Command(commands=["start"]))
async def start(message: Message):
    global wait
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç!–Ø –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –∏–≥—Ä–∞–µ—Ç  —Å —Ç–æ–±–æ–π —É–≥–∞–¥–∞–π —á–∏—Å–ª–æ\n, —è –∑–∞–≥–∞–¥—ã–≤–∞—é –ª—é–±–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10 –∏ –≥–æ–≤–æ—Ä—é –æ—Ç–≥–∞–¥–∞–ª —Ç—ã –∏–ª–∏ –Ω–µ—Ç,—Ç—ã –≥–æ—Ç–æ–≤?")
    


@dp.message(Command(commands=["help"]))
async def help(message: Message):
    await message.answer(
        '''–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –≤—Ä–µ–º–µ–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω,–ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ–∑–∂–µ'''
    )

@dp.message(Command(commands="stat"))
async def process_stat_command(message: Message):
    await message.answer(f"üéØ–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏: {user['attempts']}(—Å –ø–ª–∞—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π 10)\nüéâ–í—Å–µ–≥–æ –∏–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: {user['total_games']} \nüèÜ–ü–æ–±–µ–¥: {user['wins']}")


@dp.message(Command(commands="cancel"))
async def process_cancel_command(message: Message):
    global user
    if user['in_game']:
        user['in_game'] = False
        await message.answer("–≠–º–º–º –Ω—É—É –æ–∫–µ–π,–∫–∞–∫ —Ö–æ—á–µ—à—å")
    else:
        await message.answer("–ß–æ —Ç—ã —Ç–∞–º –æ—Ç–º–µ–Ω–∏—Ç—å –ø—ã—Ç–∞–µ—à—å—Å—è —Ç—É–ø–æ–π,—ç–≤–æ–ª—é—Ü–∏—é —Å–µ–±–µ –æ—Ç–º–µ–Ω–∏‚ù§‚ù§‚ù§")

@dp.message(F.text.lower().in_(['–¥–∞', '–¥–∞–≤–∞–π', '—Å—ã–≥—Ä–∞–µ–º', '–∏–≥—Ä–∞', '–∏–≥—Ä–∞—Ç—å', '—Ö–æ—á—É –∏–≥—Ä–∞—Ç—å']))
async def process_positive_answer(message: Message):
    global user,num
    user['in_game'] = True
    num = randomNum()
    await message.answer("–í—Å–µ —è –∑–∞–≥–∞–¥–∞–ª,–º–æ–∂–µ—à—å –æ—Ç–≥–∞–¥—ã–≤–∞—Ç—å")

def randomNum() -> int:
    return random.randint(1,10)

@dp.message()
async def answer(message:Message):
    global num
    if user['in_game']:
        if message.text.isdigit():
            if int(message.text) >= 0 and int(message.text) <= 100:
                if user['attempts'] > 0:
                    if int(message.text) == num :
                        await message.answer("–ú–æ–ª–æ–¥–µ—Ü,—É–≥–∞–¥–∞–ª,–ø—Ä–æ—Å—Ç–æ —Ç–∏–≥—Ä‚ù§‚ù§‚ù§")
                        user['in_game'] = False
                    else:
                        await message.answer("–ù–µ —É–≥–∞–¥–∞–ª,–ø–æ–ø—Ä–æ–±—É–π –µ—â–µüò¢üò¢üò¢")
                        user['attempts'] -= 1
                else:
                    await message.answer("–£ —Ç–µ–±—è –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å,–¢–£–ü–û–ô")
        else:
            await message.reply("–ê –Ω—É –≥–æ–≤–æ—Ä–∏ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º —è–∑—ã–∫–æ–º,–Ω–∏—á–µ–≥–æ –∂–µ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ")

@dp.message(F.text.lower().in_(['–Ω–µ—Ç', '–Ω–µ', '–Ω–µ —Ö–æ—á—É', '–Ω–µ –±—É–¥—É']))
async def process_negative_answer(message: Message):
    if user['in_game']:
        await message.answer("–û–≥–∞–¥—ã–≤–∞–π –¥–∞–≤–∞–π,–Ω–µ —Ö–æ—á–µ—Ç –æ–Ω")
    else:
        await message.answer("–ù—É –Ω–µ —Ö–æ—á–µ—à—å –∫–∞–∫ —Ö–æ—á–µ—à—å,—Ç–≤–æ–∏ –ø—Ä–æ–±–ª–µ–º—ã")

dp.run_polling(bot)
